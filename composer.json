{
    "name": "mediatis/form-logic",
    "description": "Helper functions for Sysext:Forms",
    "license": "GPL-2.0+",
    "type": "typo3-cms-extension",
    "authors": [
        {
            "name": "Meelis Karulin",
            "email": "info@mediatis.de",
            "homepage": "http://www.mediatis.de",
            "role": "Developer"
        }
    ],
    "require": {
        "php": "^8.1",
        "typo3/cms-core": "^12.4 || ^13.4"
    },
    "require-dev": {
        "mediatis/typo3-coding-standards": "^2.1.7 || ^3.0.3"
    },
    "conflict": {
        "mediatis/formhelper": "<5.3.0"
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "phpstan/extension-installer": true,
            "typo3/class-alias-loader": true,
            "typo3/cms-composer-installers": true
        },
        "bin-dir": ".Build/bin",
        "cache-dir": "./cache/composer",
        "vendor-dir": ".Build/vendor"
    },
    "extra": {
        "typo3/cms": {
            "app-dir": ".Build",
            "extension-key": "form_logic",
            "web-dir": ".Build/Web"
        }
    },
    "scripts": {
        "ci": [
            "@ci:static"
        ],
        "ci:composer": [
            "@ci:composer:normalize"
        ],
        "ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
        "ci:json": [
            "@ci:json:lint"
        ],
        "ci:json:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -name '*.json' | xargs -r php .Build/bin/jsonlint -q",
        "ci:static": [
            "@ci:composer",
            "@ci:json",
            "@ci:yaml"
        ],
        "ci:yaml": [
            "@ci:yaml:lint"
        ],
        "ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -regextype egrep -regex '.*.ya?ml$' | xargs -r php ./.Build/bin/yaml-lint",
        "coding-standards:reset": [
            "./.Build/bin/mediatis-typo3-coding-standards-setup reset",
            "@fix:composer"
        ],
        "coding-standards:update": [
            "./.Build/bin/mediatis-typo3-coding-standards-setup",
            "@fix:composer"
        ],
        "docs:generate": [
            "@docs:generate:pullimage",
            "docker run --rm ghcr.io/t3docs/render-documentation show-shell-commands > tempfile.sh; echo 'dockrun_t3rd makehtml' >> tempfile.sh; bash tempfile.sh; rm tempfile.sh"
        ],
        "docs:generate:pullimage": [
            "docker pull ghcr.io/t3docs/render-documentation",
            "docker tag ghcr.io/t3docs/render-documentation t3docs/render-documentation"
        ],
        "fix": [
            "@fix:composer"
        ],
        "fix:composer": [
            "@fix:composer:normalize"
        ],
        "fix:composer:normalize": "@composer normalize --no-check-lock",
        "prepare-release": [
            "rm .gitignore",
            "rm -rf .Build",
            "rm -rf .ddev",
            "rm -rf .github",
            "rm -rf .gitlab",
            "rm -rf Build",
            "rm -rf Tests",
            "rm -rf tools",
            "rm .editorconfig",
            "rm .gitattributes",
            "rm .php-cs-fixer.php",
            "rm .eslintignore",
            "rm .eslintrc.json",
            "rm .prettierrc.js",
            "rm package.json",
            "rm stylelint.config.js",
            "rm phive.xml",
            "rm phpstan-baseline.neon",
            "rm phpstan.neon",
            "rm phpcs.xml"
        ]
    },
    "scripts-descriptions": {
        "ci": "Runs all dynamic and static code checks.",
        "ci:composer": "Runs all composer checks.",
        "ci:json": "Runs all JSON checks.",
        "ci:json:lint": "Lints the JSON files.",
        "ci:static": "Runs all static code checks (syntax, style, types).",
        "ci:yaml": "Runs all YAML checks.",
        "ci:yaml:lint": "Lints the YAML files.",
        "docs:generate": "Renders the extension ReST documentation.",
        "fix": "Runs all fixers.",
        "fix:composer": "Runs all composer fixers.",
        "fix:composer:normalize": "Normalizes composer.json file content.",
        "prepare-release": "Removes development-only files in preparation of a TER release."
    }
}
